name: Rust tests
# Credit: modified from github actions documentation examples

on: [push]
jobs:
  # codecov-generate:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest]
  #       rust: [nightly]
  #   steps:
  #   - uses: hecrj/setup-rust-action@v1
  #     with:
  #       rust-version: ${{ matrix.rust }}
  #   - uses: actions/checkout@master
  #   - name: Run tests
  #     run: |
  #       sudo apt-get install -y libcurl4-openssl-dev libelf-dev libdw-dev cmake gcc binutils-dev libiberty-dev
  #       wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz
  #       tar xzf master.tar.gz
  #       cd kcov-master
  #       mkdir build
  #       cd build
  #       cmake ..
  #       make
  #       make install DESTDIR=../../kcov-build
  #       cd ../..
  #       rm -rf kcov-master
  #       for file in target/debug/examplerust-*; do [ -x "${file}" ] || continue; mkdir -p "target/cov/$(basename $file)"; ./kcov-build/usr/local/bin/kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done
  #       bash <(curl -s https://codecov.io/bash)
  #       echo "Uploaded code coverage"
  #     env: # Or as an environment variable
  #       CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [stable, nightly]

    steps:
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust }}
    - uses: actions/checkout@master
    - name: Run tests
      run: |
        sudo apt-get install python3-pip python3
        pip3 install numpy
        echo "Python deps installed"
        python3 generate_ballots.py
        ls
        echo "Ballots generated"
        cargo test --verbose
